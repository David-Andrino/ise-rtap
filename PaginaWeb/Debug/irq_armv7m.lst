


ARM Macro Assembler    Page 1 


    1 00000000         ;/*
    2 00000000         ; * Copyright (c) 2013-2021 Arm Limited. All rights rese
                       rved.
    3 00000000         ; *
    4 00000000         ; * SPDX-License-Identifier: Apache-2.0
    5 00000000         ; *
    6 00000000         ; * Licensed under the Apache License, Version 2.0 (the 
                       License); you may
    7 00000000         ; * not use this file except in compliance with the Lice
                       nse.
    8 00000000         ; * You may obtain a copy of the License at
    9 00000000         ; *
   10 00000000         ; * www.apache.org/licenses/LICENSE-2.0
   11 00000000         ; *
   12 00000000         ; * Unless required by applicable law or agreed to in wr
                       iting, software
   13 00000000         ; * distributed under the License is distributed on an A
                       S IS BASIS, WITHOUT
   14 00000000         ; * WARRANTIES OR CONDITIONS OF ANY KIND, either express
                        or implied.
   15 00000000         ; * See the License for the specific language governing 
                       permissions and
   16 00000000         ; * limitations under the License.
   17 00000000         ; *
   18 00000000         ; * ----------------------------------------------------
                       -------------------------
   19 00000000         ; *
   20 00000000         ; * Project:     CMSIS-RTOS RTX
   21 00000000         ; * Title:       ARMv7-M Exception handlers
   22 00000000         ; *
   23 00000000         ; * ----------------------------------------------------
                       -------------------------
   24 00000000         ; */
   25 00000000         
   26 00000000         
   27 00000000                 IF               :LNOT::DEF:RTX_STACK_CHECK
   29                          ENDIF
   30 00000000         
   31 00000000                 IF               ({FPU}="FPv4-SP")
   34 00000000 00000000 
                       FPU_USED
                               EQU              0
   35 00000000                 ENDIF
   36 00000000         
   37 00000000 00000014 
                       I_T_RUN_OFS
                               EQU              20          ; osRtxInfo.thread.
                                                            run offset
   38 00000000 00000038 
                       TCB_SP_OFS
                               EQU              56          ; TCB.SP offset
   39 00000000 00000022 
                       TCB_SF_OFS
                               EQU              34          ; TCB.stack_frame o
                                                            ffset
   40 00000000         
   41 00000000 E000EF34 
                       FPCCR   EQU              0xE000EF34  ; FPCCR Address
   42 00000000         



ARM Macro Assembler    Page 2 


   44 00000000 00000001 
                       osRtxErrorStackOverflow
                               EQU              1           ; Stack overflow
   45 00000000         
   46 00000000         
   47 00000000                 PRESERVE8
   48 00000000                 THUMB
   49 00000000         
   50 00000000         
   51 00000000                 AREA             |.constdata|, DATA, READONLY
   52 00000000                 EXPORT           irqRtxLib
   53 00000000 00      irqRtxLib
                               DCB              0           ; Non weak library 
                                                            reference
   54 00000001         
   55 00000001         
   56 00000001                 AREA             |.text|, CODE, READONLY
   57 00000000         
   58 00000000         
   59 00000000         SVC_Handler
                               PROC
   60 00000000                 EXPORT           SVC_Handler
   61 00000000                 IMPORT           osRtxUserSVC
   62 00000000                 IMPORT           osRtxInfo
   63 00000000                 IF               RTX_STACK_CHECK != 0
   66                          ENDIF
   67 00000000         
   68 00000000 F01E 0F04       TST              LR,#0x04    ; Determine return 
                                                            stack from EXC_RETU
                                                            RN bit 2
   69 00000004 BF0C            ITE              EQ
   70 00000006 F3EF 8008       MRSEQ            R0,MSP      ; Get MSP if return
                                                             stack is MSP
   71 0000000A F3EF 8009       MRSNE            R0,PSP      ; Get PSP if return
                                                             stack is PSP
   72 0000000E         
   73 0000000E 6981            LDR              R1,[R0,#24] ; Load saved PC fro
                                                            m stack
   74 00000010 F811 1C02       LDRB             R1,[R1,#-2] ; Load SVC number
   75 00000014 2900            CMP              R1,#0       ; Check SVC number
   76 00000016 D11B            BNE              SVC_User    ; Branch if not SVC
                                                             0
   77 00000018         
   78 00000018 B501            PUSH             {R0,LR}     ; Save SP and EXC_R
                                                            ETURN
   79 0000001A E890 100F       LDM              R0,{R0-R3,R12} ; Load function 
                                                            parameters and addr
                                                            ess from stack
   80 0000001E 47E0            BLX              R12         ; Call service func
                                                            tion
   81 00000020 E8BD 5000       POP              {R12,LR}    ; Restore SP and EX
                                                            C_RETURN
   82 00000024 E88C 0003       STM              R12,{R0-R1} ; Store function re
                                                            turn values
   83 00000028         
   84 00000028         SVC_Context
   85 00000028 4B18            LDR              R3,=osRtxInfo+I_T_RUN_OFS ; Loa
                                                            d address of osRtxI
                                                            nfo.thread.run



ARM Macro Assembler    Page 3 


   86 0000002A E893 0006       LDM              R3,{R1,R2}  ; Load osRtxInfo.th
                                                            read.run: curr & ne
                                                            xt
   87 0000002E 4291            CMP              R1,R2       ; Check if thread s
                                                            witch is required
   88 00000030 BF08            IT               EQ
   89 00000032 4770            BXEQ             LR          ; Exit when threads
                                                             are the same
   90 00000034         
   91 00000034 601A            STR              R2,[R3]     ; osRtxInfo.thread.
                                                            run: curr = next
   92 00000036         
   93 00000036                 IF               FPU_USED != 0
  104 00000036 B119            CBZ              R1,SVC_ContextRestore ; Branch 
                                                            if running thread i
                                                            s deleted
  105 00000038                 ENDIF
  106 00000038         
  107 00000038         SVC_ContextSave
  108 00000038                 IF               RTX_STACK_CHECK != 0
  149 00000038 E92C 0FF0       STMDB            R12!,{R4-R11} ; Save R4..R11
  150 0000003C                 IF               FPU_USED != 0
  155                          ENDIF
  156 0000003C F8C1 C038       STR              R12,[R1,#TCB_SP_OFS] ; Store SP
                                                            
  157 00000040                 ENDIF
  158 00000040         
  159 00000040         SVC_ContextRestore
  160 00000040 6B90            LDR              R0,[R2,#TCB_SP_OFS] ; Load SP
  161 00000042                 IF               FPU_USED != 0
  168 00000042 F06F 0E02       MVN              LR,#~0xFFFFFFFD ; Set EXC_RETUR
                                                            N value
  169 00000046                 ENDIF
  170 00000046 E8B0 0FF0       LDMIA            R0!,{R4-R11} ; Restore R4..R11
  171 0000004A F380 8809       MSR              PSP,R0      ; Set PSP
  172 0000004E         
  173 0000004E         SVC_Exit
  174 0000004E 4770            BX               LR          ; Exit from handler
                                                            
  175 00000050         
  176 00000050         SVC_User
  177 00000050 4A0F            LDR              R2,=osRtxUserSVC ; Load address
                                                             of SVC table
  178 00000052 6813            LDR              R3,[R2]     ; Load SVC maximum 
                                                            number
  179 00000054 4299            CMP              R1,R3       ; Check SVC number 
                                                            range
  180 00000056 D8FA            BHI              SVC_Exit    ; Branch if out of 
                                                            range
  181 00000058         
  182 00000058 B501            PUSH             {R0,LR}     ; Save SP and EXC_R
                                                            ETURN
  183 0000005A F852 C021       LDR              R12,[R2,R1,LSL #2] ; Load addre
                                                            ss of SVC function
  184 0000005E C80F            LDM              R0,{R0-R3}  ; Load function par
                                                            ameters from stack
  185 00000060 47E0            BLX              R12         ; Call service func
                                                            tion
  186 00000062 E8BD 5000       POP              {R12,LR}    ; Restore SP and EX



ARM Macro Assembler    Page 4 


                                                            C_RETURN
  187 00000066 F8CC 0000       STR              R0,[R12]    ; Store function re
                                                            turn value
  188 0000006A         
  189 0000006A 4770            BX               LR          ; Return from handl
                                                            er
  190 0000006C         
  191 0000006C                 ALIGN
  192 0000006C                 ENDP
  193 0000006C         
  194 0000006C         
  195 0000006C         PendSV_Handler
                               PROC
  196 0000006C                 EXPORT           PendSV_Handler
  197 0000006C                 IMPORT           osRtxPendSV_Handler
  198 0000006C         
  199 0000006C B501            PUSH             {R0,LR}     ; Save EXC_RETURN
  200 0000006E F7FF FFFE       BL               osRtxPendSV_Handler ; Call osRt
                                                            xPendSV_Handler
  201 00000072 E8BD 4001       POP              {R0,LR}     ; Restore EXC_RETUR
                                                            N
  202 00000076 F3EF 8C09       MRS              R12,PSP     ; Save PSP to R12
  203 0000007A E7D5            B                SVC_Context ; Branch to context
                                                             handling
  204 0000007C         
  205 0000007C                 ALIGN
  206 0000007C                 ENDP
  207 0000007C         
  208 0000007C         
  209 0000007C         SysTick_Handler
                               PROC
  210 0000007C                 EXPORT           SysTick_Handler
  211 0000007C                 IMPORT           osRtxTick_Handler
  212 0000007C         
  213 0000007C B501            PUSH             {R0,LR}     ; Save EXC_RETURN
  214 0000007E F7FF FFFE       BL               osRtxTick_Handler ; Call osRtxT
                                                            ick_Handler
  215 00000082 E8BD 4001       POP              {R0,LR}     ; Restore EXC_RETUR
                                                            N
  216 00000086 F3EF 8C09       MRS              R12,PSP     ; Save PSP to R12
  217 0000008A E7CD            B                SVC_Context ; Branch to context
                                                             handling
  218 0000008C         
  219 0000008C                 ALIGN
  220 0000008C                 ENDP
  221 0000008C         
  222 0000008C         
  223 0000008C                 END
              00000014 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M7.fp.dp --apcs=
interwork --depend=.\debug\irq_armv7m.d -o.\debug\irq_armv7m.o -I.\RTE\CMSIS -I
.\RTE\Compiler -I.\RTE\Device\STM32F769NIHx -I.\RTE\Network -I.\RTE\_Debug -IC:
\Users\X421\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0\CMSIS\Core\Include -IC:\Use
rs\X421\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0\CMSIS\Driver\Include -IC:\Users
\X421\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0\CMSIS\RTOS2\Include -IC:\Users\X4
21\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0\CMSIS\RTOS2\RTX\Include -IC:\Users\X
421\AppData\Local\Arm\Packs\Keil\ARM_Compiler\1.7.2\Include -IC:\Users\X421\App
Data\Local\Arm\Packs\Keil\MDK-Middleware\7.13.0\Network\Include -IC:\Users\X421



ARM Macro Assembler    Page 5 


\AppData\Local\Arm\Packs\Keil\STM32F7xx_DFP\2.16.0\Drivers\CMSIS\Device\ST\STM3
2F7xx\Include -IC:\Users\X421\AppData\Local\Arm\Packs\Keil\STM32F7xx_DFP\2.16.0
\Drivers\STM32F7xx_HAL_Driver\Inc --predefine="__RTX SETA 1" --predefine="__MIC
ROLIB SETA 1" --predefine="__UVISION_VERSION SETA 534" --predefine="_RTE_ SETA 
1" --predefine="STM32F769xx SETA 1" --predefine="_RTE_ SETA 1" --list=.\debug\i
rq_armv7m.lst C:\Users\X421\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0\CMSIS\RTOS2
\RTX\Source\ARM\irq_armv7m.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.constdata 00000000

Symbol: .constdata
   Definitions
      At line 51 in file C:\Users\X421\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0\
CMSIS\RTOS2\RTX\Source\ARM\irq_armv7m.s
   Uses
      None
Comment: .constdata unused
irqRtxLib 00000000

Symbol: irqRtxLib
   Definitions
      At line 53 in file C:\Users\X421\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0\
CMSIS\RTOS2\RTX\Source\ARM\irq_armv7m.s
   Uses
      At line 52 in file C:\Users\X421\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0\
CMSIS\RTOS2\RTX\Source\ARM\irq_armv7m.s
Comment: irqRtxLib used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 56 in file C:\Users\X421\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0\
CMSIS\RTOS2\RTX\Source\ARM\irq_armv7m.s
   Uses
      None
Comment: .text unused
PendSV_Handler 0000006C

Symbol: PendSV_Handler
   Definitions
      At line 195 in file C:\Users\X421\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0
\CMSIS\RTOS2\RTX\Source\ARM\irq_armv7m.s
   Uses
      At line 196 in file C:\Users\X421\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0
\CMSIS\RTOS2\RTX\Source\ARM\irq_armv7m.s
Comment: PendSV_Handler used once
SVC_Context 00000028

Symbol: SVC_Context
   Definitions
      At line 84 in file C:\Users\X421\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0\
CMSIS\RTOS2\RTX\Source\ARM\irq_armv7m.s
   Uses
      At line 203 in file C:\Users\X421\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0
\CMSIS\RTOS2\RTX\Source\ARM\irq_armv7m.s
      At line 217 in file C:\Users\X421\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0
\CMSIS\RTOS2\RTX\Source\ARM\irq_armv7m.s

SVC_ContextRestore 00000040

Symbol: SVC_ContextRestore
   Definitions
      At line 159 in file C:\Users\X421\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0
\CMSIS\RTOS2\RTX\Source\ARM\irq_armv7m.s
   Uses
      At line 104 in file C:\Users\X421\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0
\CMSIS\RTOS2\RTX\Source\ARM\irq_armv7m.s
Comment: SVC_ContextRestore used once
SVC_ContextSave 00000038

Symbol: SVC_ContextSave
   Definitions
      At line 107 in file C:\Users\X421\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0
\CMSIS\RTOS2\RTX\Source\ARM\irq_armv7m.s
   Uses
      None
Comment: SVC_ContextSave unused
SVC_Exit 0000004E

Symbol: SVC_Exit
   Definitions
      At line 173 in file C:\Users\X421\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0
\CMSIS\RTOS2\RTX\Source\ARM\irq_armv7m.s
   Uses
      At line 180 in file C:\Users\X421\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0
\CMSIS\RTOS2\RTX\Source\ARM\irq_armv7m.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Comment: SVC_Exit used once
SVC_Handler 00000000

Symbol: SVC_Handler
   Definitions
      At line 59 in file C:\Users\X421\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0\
CMSIS\RTOS2\RTX\Source\ARM\irq_armv7m.s
   Uses
      At line 60 in file C:\Users\X421\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0\
CMSIS\RTOS2\RTX\Source\ARM\irq_armv7m.s
Comment: SVC_Handler used once
SVC_User 00000050

Symbol: SVC_User
   Definitions
      At line 176 in file C:\Users\X421\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0
\CMSIS\RTOS2\RTX\Source\ARM\irq_armv7m.s
   Uses
      At line 76 in file C:\Users\X421\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0\
CMSIS\RTOS2\RTX\Source\ARM\irq_armv7m.s
Comment: SVC_User used once
SysTick_Handler 0000007C

Symbol: SysTick_Handler
   Definitions
      At line 209 in file C:\Users\X421\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0
\CMSIS\RTOS2\RTX\Source\ARM\irq_armv7m.s
   Uses
      At line 210 in file C:\Users\X421\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0
\CMSIS\RTOS2\RTX\Source\ARM\irq_armv7m.s
Comment: SysTick_Handler used once
9 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

FPCCR E000EF34

Symbol: FPCCR
   Definitions
      At line 41 in file C:\Users\X421\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0\
CMSIS\RTOS2\RTX\Source\ARM\irq_armv7m.s
   Uses
      None
Comment: FPCCR unused
FPU_USED 00000000

Symbol: FPU_USED
   Definitions
      At line 34 in file C:\Users\X421\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0\
CMSIS\RTOS2\RTX\Source\ARM\irq_armv7m.s
   Uses
      At line 93 in file C:\Users\X421\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0\
CMSIS\RTOS2\RTX\Source\ARM\irq_armv7m.s
      At line 150 in file C:\Users\X421\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0
\CMSIS\RTOS2\RTX\Source\ARM\irq_armv7m.s
      At line 161 in file C:\Users\X421\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0
\CMSIS\RTOS2\RTX\Source\ARM\irq_armv7m.s

I_T_RUN_OFS 00000014

Symbol: I_T_RUN_OFS
   Definitions
      At line 37 in file C:\Users\X421\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0\
CMSIS\RTOS2\RTX\Source\ARM\irq_armv7m.s
   Uses
      At line 85 in file C:\Users\X421\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0\
CMSIS\RTOS2\RTX\Source\ARM\irq_armv7m.s
Comment: I_T_RUN_OFS used once
RTX_STACK_CHECK 00000000

Symbol: RTX_STACK_CHECK
   Definitions
      At line 28 in file C:\Users\X421\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0\
CMSIS\RTOS2\RTX\Source\ARM\irq_armv7m.s
   Uses
      At line 63 in file C:\Users\X421\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0\
CMSIS\RTOS2\RTX\Source\ARM\irq_armv7m.s
      At line 108 in file C:\Users\X421\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0
\CMSIS\RTOS2\RTX\Source\ARM\irq_armv7m.s

TCB_SF_OFS 00000022

Symbol: TCB_SF_OFS
   Definitions
      At line 39 in file C:\Users\X421\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0\
CMSIS\RTOS2\RTX\Source\ARM\irq_armv7m.s
   Uses
      None
Comment: TCB_SF_OFS unused
TCB_SP_OFS 00000038

Symbol: TCB_SP_OFS
   Definitions
      At line 38 in file C:\Users\X421\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0\



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

CMSIS\RTOS2\RTX\Source\ARM\irq_armv7m.s
   Uses
      At line 156 in file C:\Users\X421\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0
\CMSIS\RTOS2\RTX\Source\ARM\irq_armv7m.s
      At line 160 in file C:\Users\X421\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0
\CMSIS\RTOS2\RTX\Source\ARM\irq_armv7m.s

osRtxErrorStackOverflow 00000001

Symbol: osRtxErrorStackOverflow
   Definitions
      At line 44 in file C:\Users\X421\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0\
CMSIS\RTOS2\RTX\Source\ARM\irq_armv7m.s
   Uses
      None
Comment: osRtxErrorStackOverflow unused
7 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

osRtxInfo 00000000

Symbol: osRtxInfo
   Definitions
      At line 62 in file C:\Users\X421\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0\
CMSIS\RTOS2\RTX\Source\ARM\irq_armv7m.s
   Uses
      At line 85 in file C:\Users\X421\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0\
CMSIS\RTOS2\RTX\Source\ARM\irq_armv7m.s
Comment: osRtxInfo used once
osRtxPendSV_Handler 00000000

Symbol: osRtxPendSV_Handler
   Definitions
      At line 197 in file C:\Users\X421\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0
\CMSIS\RTOS2\RTX\Source\ARM\irq_armv7m.s
   Uses
      At line 200 in file C:\Users\X421\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0
\CMSIS\RTOS2\RTX\Source\ARM\irq_armv7m.s
Comment: osRtxPendSV_Handler used once
osRtxTick_Handler 00000000

Symbol: osRtxTick_Handler
   Definitions
      At line 211 in file C:\Users\X421\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0
\CMSIS\RTOS2\RTX\Source\ARM\irq_armv7m.s
   Uses
      At line 214 in file C:\Users\X421\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0
\CMSIS\RTOS2\RTX\Source\ARM\irq_armv7m.s
Comment: osRtxTick_Handler used once
osRtxUserSVC 00000000

Symbol: osRtxUserSVC
   Definitions
      At line 61 in file C:\Users\X421\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0\
CMSIS\RTOS2\RTX\Source\ARM\irq_armv7m.s
   Uses
      At line 177 in file C:\Users\X421\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0
\CMSIS\RTOS2\RTX\Source\ARM\irq_armv7m.s
Comment: osRtxUserSVC used once
4 symbols
361 symbols in table
